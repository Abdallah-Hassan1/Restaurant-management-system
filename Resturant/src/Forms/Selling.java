package Forms;

import java.awt.Color;
import java.awt.Image;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

public class Selling extends javax.swing.JFrame {

    /**
     * Creates new form Selling
     */
    boolean editingIsVisible;
    Editing parent;
    public Selling(boolean editingIsVisible, Editing parent) {
        initComponents();
        selectData("PIZZA");
        scaleImages();
        this.editingIsVisible = editingIsVisible;
        this.parent = parent;
    }
    Connection con = null;
    ResultSet Rs = null;
    Statement st = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel2 = new java.awt.Label();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Selling");
        setLocation(new java.awt.Point(150, 100));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Product", "Size", "Price", "Exist"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(25);
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTable2MouseDragged(evt);
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(15);
        }

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setToolTipText("Pizza");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 4));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setToolTipText("Shawarma");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setToolTipText("Pasta");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton3MousePressed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setToolTipText("Chicken");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton4MousePressed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setToolTipText("Appetizers");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton5MousePressed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setToolTipText("Meat");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton6MousePressed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setToolTipText("Desserts");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton7MousePressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTable3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Product", "Size", "Quantity", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setRowHeight(18);
        jTable3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable3MousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTable3.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable3.getColumnModel().getColumn(2).setPreferredWidth(80);
        }

        jButton8.setToolTipText("Add");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton8MousePressed(evt);
            }
        });

        jButton9.setToolTipText("Remove");
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton9MousePressed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel1.setText("Total");

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jTextField2.setText("0.0");

        jButton10.setToolTipText("Clear");
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton10MousePressed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton11.setToolTipText("Drinks");
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton11MousePressed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Segoe Print", 0, 28)); // NOI18N
        jButton12.setText("Edit Exist");
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton12MousePressed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton13.setToolTipText("Print");
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.setPreferredSize(new java.awt.Dimension(129, 37));
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton13MousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setText("Product");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Log out");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(341, 341, 341)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)))))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(jLabel1)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton10.getAccessibleContext().setAccessibleDescription("Clear");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void selectData(String text){
        String dir = System.getProperty("user.dir");
        try{
            con = DriverManager.getConnection("jdbc:derby:"+ dir +"/Project", "Abdallah", "1234");
            st = con.createStatement();
            Rs = st.executeQuery("Select * from ABDALLAH." + text);
            jTable1.setModel(DbUtils.resultSetToTableModel(Rs));
            jLabel2.setText(text);
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    public void insertData(){
        DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
        model.setRowCount(0);
        for (int i = 0; i < jTable1.getRowCount(); i++){
            Object[] row = {jTable1.getModel().getValueAt(i, 0), jTable1.getModel().getValueAt(i, 1),
                jTable1.getModel().getValueAt(i, 2), jTable1.getModel().getValueAt(i, 3), jTable1.getModel().getValueAt(i, 4)};
            model.addRow(row);
        }
        if (jTable2.getRowCount() != 0){
            jTable2.setRowSelectionInterval(0, 0);
            checkSelection();
        }
        jTextField1.requestFocus();
    }
    public void getTotal(){
        float total = 0;
        for (int i = 0; i < jTable3.getRowCount(); i++)
            total += Float.parseFloat(jTable3.getModel().getValueAt(i, 4).toString());
        jTextField2.setText(String.valueOf(total));
    }
    public void scaleImages(){
        ImageIcon icon1 = new ImageIcon(getClass().getResource("images/PIZZA.jpg"));
        Image img1 = icon1.getImage();
        Image imgScale1 = img1.getScaledInstance(jButton1.getWidth(), jButton1.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon1 = new ImageIcon(imgScale1);
        jButton1.setIcon(scaledIcon1);
        
        ImageIcon icon2 = new ImageIcon(getClass().getResource("images/SHAWARMA.jpg"));
        Image img2 = icon2.getImage();
        Image imgScale2 = img2.getScaledInstance(jButton2.getWidth(), jButton2.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon2 = new ImageIcon(imgScale2);
        jButton2.setIcon(scaledIcon2);
        
        ImageIcon icon3 = new ImageIcon(getClass().getResource("images/PASTA.jpg"));
        Image img3 = icon3.getImage();
        Image imgScale3 = img3.getScaledInstance(jButton3.getWidth(), jButton3.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon3 = new ImageIcon(imgScale3);
        jButton3.setIcon(scaledIcon3);
        
        ImageIcon icon4 = new ImageIcon(getClass().getResource("images/CHICKEN.jpg"));
        Image img4 = icon4.getImage();
        Image imgScale4 = img4.getScaledInstance(jButton4.getWidth(), jButton4.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon4 = new ImageIcon(imgScale4);
        jButton4.setIcon(scaledIcon4);
        
        ImageIcon icon5 = new ImageIcon(getClass().getResource("images/APPETIZERS.jpg"));
        Image img5 = icon5.getImage();
        Image imgScale5 = img5.getScaledInstance(jButton5.getWidth(), jButton5.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon5 = new ImageIcon(imgScale5);
        jButton5.setIcon(scaledIcon5);
        
        ImageIcon icon6 = new ImageIcon(getClass().getResource("images/MEAT.jpg"));
        Image img6 = icon6.getImage();
        Image imgScale6 = img6.getScaledInstance(jButton6.getWidth(), jButton6.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon6 = new ImageIcon(imgScale6);
        jButton6.setIcon(scaledIcon6);
        
        ImageIcon icon7 = new ImageIcon(getClass().getResource("images/DESSERTS.jpg"));
        Image img7 = icon7.getImage();
        Image imgScale7 = img7.getScaledInstance(jButton7.getWidth(), jButton7.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon7 = new ImageIcon(imgScale7);
        jButton7.setIcon(scaledIcon7);
        
        ImageIcon icon11 = new ImageIcon(getClass().getResource("images/DRINKS.jpg"));
        Image img11 = icon11.getImage();
        Image imgScale11 = img11.getScaledInstance(jButton11.getWidth(), jButton11.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon11 = new ImageIcon(imgScale11);
        jButton11.setIcon(scaledIcon11);
        
        ImageIcon icon8 = new ImageIcon(getClass().getResource("images/add.png"));
        Image img8= icon8.getImage();
        Image imgScale8 = img8.getScaledInstance(jButton8.getWidth(), jButton8.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon8 = new ImageIcon(imgScale8);
        jButton8.setIcon(scaledIcon8);
        
        ImageIcon icon9 = new ImageIcon(getClass().getResource("images/delete.png"));
        Image img9 = icon9.getImage();
        Image imgScale9 = img9.getScaledInstance(jButton9.getWidth(), jButton9.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon9 = new ImageIcon(imgScale9);
        jButton9.setIcon(scaledIcon9);
        
        ImageIcon icon10 = new ImageIcon(getClass().getResource("images/cancel.png"));
        Image img10 = icon10.getImage();
        Image imgScale10 = img10.getScaledInstance(jButton10.getWidth(), jButton10.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon10 = new ImageIcon(imgScale10);
        jButton10.setIcon(scaledIcon10);
        
        ImageIcon icon13 = new ImageIcon(getClass().getResource("images/printer.png"));
        Image img13 = icon13.getImage();
        Image imgScale13 = img13.getScaledInstance(jButton13.getWidth(), jButton13.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon13 = new ImageIcon(imgScale13);
        jButton13.setIcon(scaledIcon13);
    }
    public void removeBorder(){
        jButton1.setBorder(new LineBorder(Color.black, 0));
        jButton2.setBorder(new LineBorder(Color.black, 0));
        jButton3.setBorder(new LineBorder(Color.black, 0));
        jButton4.setBorder(new LineBorder(Color.black, 0));
        jButton5.setBorder(new LineBorder(Color.black, 0));
        jButton6.setBorder(new LineBorder(Color.black, 0));
        jButton7.setBorder(new LineBorder(Color.black, 0));
        jButton11.setBorder(new LineBorder(Color.black, 0));
    }
    public void checkSelection(){
        if (!(boolean)jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 4))
            jTable2.setSelectionBackground(Color.red);
        else
            jTable2.setSelectionBackground(new Color(0,120,215));
    }
    public String spaces(int s){
        String text = "";
        for (int i = 0; i < s; i++)
            text+= " ";
        return text;
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // When form opened
        insertData();
        jPanel1.setVisible(false);
        jTextField1.requestFocus();
        jLabel2.setText("PIZZA");
        jScrollPane4.setVisible(false);
        jTable2.setSelectionBackground(new Color(0,120,215));
        jTable3.setSelectionBackground(new Color(0,120,215));
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // When this form closing
        if (jTable3.getRowCount() != 0){
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            JOptionPane.showMessageDialog(this, "Clear the bill before closing", "Message", JOptionPane.INFORMATION_MESSAGE);
        }else{
            if (editingIsVisible){
                if (parent.isVisible())
                    this.setDefaultCloseOperation(HIDE_ON_CLOSE);
                else
                    this.setDefaultCloseOperation(EXIT_ON_CLOSE);
            }else
                this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // Quantity field (type text)
        char input = evt.getKeyChar();
        if (!Character.isDigit(input) || (input == '0' && jTextField1.getText().length() == 0))
            evt.consume();
        // when the user press Enter key from keybooard which its unicode = 10
        if ((int)evt.getKeyChar() == 10) jButton8MousePressed(null);
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        // Table 2 mouse clicked
        // Double click on table of products
        if (evt.getClickCount() == 2 && !evt.isConsumed()){
            if (!(boolean)jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 4)){
                JOptionPane.showMessageDialog(this, "Not avialable");
                jTextField1.requestFocus();
            }else{
                for (int i = 0; i < jTable3.getRowCount(); i++){
                    if (jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 0).equals(jTable3.getModel().getValueAt(i, 0)) &&
                        jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 1).equals(jTable3.getModel().getValueAt(i, 1))){
                        jTable3.getModel().setValueAt(Integer.parseInt(jTable3.getModel().getValueAt(i, 3).toString()) + 1, i, 3);
                        jTable3.getModel().setValueAt(Float.parseFloat(jTable3.getModel().getValueAt(i, 3).toString()) * Float.parseFloat(jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 3).toString()), i, 4);
                        jTable3.setRowSelectionInterval(0, i);
                        jTextField1.requestFocus();
                        getTotal();
                        return;
                    }
                }
                DefaultTableModel model = (DefaultTableModel)jTable3.getModel();
                model.setRowCount(jTable3.getRowCount());
                Object[] row = {jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 0), jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 1), jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 2),
                1, jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 3).toString()};
                model.addRow(row);
                jTable3.setRowSelectionInterval(0, jTable3.getRowCount() - 1);
                jTextField1.requestFocus();
                getTotal();
            }
        }
        checkSelection();
        jTextField1.requestFocus();
    }//GEN-LAST:event_jTable2MousePressed

    private void jTable3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MousePressed
        jTextField1.requestFocus();
    }//GEN-LAST:event_jTable3MousePressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        selectData("PIZZA");
        insertData();
        removeBorder();
        jButton1.setBorder(new LineBorder(Color.red, 4));
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        selectData("SHAWARMA");
        insertData();
        removeBorder();
        jButton2.setBorder(new LineBorder(Color.red, 4));
    }//GEN-LAST:event_jButton2MousePressed

    private void jButton3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MousePressed
        selectData("PASTA");
        insertData();
        removeBorder();
        jButton3.setBorder(new LineBorder(Color.red, 4));
    }//GEN-LAST:event_jButton3MousePressed

    private void jButton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MousePressed
        selectData("CHICKEN");
        insertData();
        removeBorder();
        jButton4.setBorder(new LineBorder(Color.red, 4));
    }//GEN-LAST:event_jButton4MousePressed

    private void jButton5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MousePressed
        selectData("APPETIZERS");
        insertData();
        removeBorder();
        jButton5.setBorder(new LineBorder(Color.red, 4));
    }//GEN-LAST:event_jButton5MousePressed

    private void jButton6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MousePressed
        selectData("MEAT");
        insertData();
        removeBorder();
        jButton6.setBorder(new LineBorder(Color.red, 4));
    }//GEN-LAST:event_jButton6MousePressed

    private void jButton7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MousePressed
        selectData("DESSERTS");
        insertData();
        removeBorder();
        jButton7.setBorder(new LineBorder(Color.red, 4));
    }//GEN-LAST:event_jButton7MousePressed

    private void jButton11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MousePressed
        selectData("DRINKS");
        insertData();
        removeBorder();
        jButton11.setBorder(new LineBorder(Color.red, 4));
    }//GEN-LAST:event_jButton11MousePressed

    private void jButton12MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MousePressed
        // Edit Exist
        if (jTable2.getRowCount() == 0){
            jTextField1.requestFocus();
            return;
        }
        try{
            String dir = System.getProperty("user.dir");
            String s =  "update " + jLabel2.getText() + " set ";
            con = DriverManager.getConnection("jdbc:derby:"+ dir +"/Project", "Abdallah", "1234");
            PreparedStatement update = con.prepareStatement(s + "Exist = "+ !(boolean)jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 4) +" where ID = "+ jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 0) +"");
            int row = update.executeUpdate();
            int rowNum = jTable2.getSelectedRow();
            selectData(jLabel2.getText());
            insertData();
            jTable2.setRowSelectionInterval(0, rowNum);
            checkSelection();
            con.close();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton12MousePressed

    private void jButton8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MousePressed
        // ADD
        if (jTable2.getRowCount() == 0 || (!jTextField1.getText().equals("") && Integer.parseInt(jTextField1.getText()) == 0)){
            jTextField1.requestFocus();
            return;
        }
        if (!(boolean)jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 4)){
            JOptionPane.showMessageDialog(this, "Not avialable");
            jTextField1.requestFocus();
        }else if (jTextField1.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Enter the quantity","Message", JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
        }else{
            for (int i = 0; i < jTable3.getRowCount(); i++){
                if (jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 0).equals(jTable3.getModel().getValueAt(i, 0)) &&
                        jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 1).equals(jTable3.getModel().getValueAt(i, 1))){
                    jTable3.getModel().setValueAt((int)(Float.parseFloat(jTable3.getModel().getValueAt(i, 3).toString()) + Float.parseFloat(jTextField1.getText())), i, 3);
                    jTable3.getModel().setValueAt(Float.parseFloat(jTable3.getModel().getValueAt(i, 3).toString()) * Float.parseFloat(jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 3).toString()), i, 4);
                    jTable3.setRowSelectionInterval(0, i);
                    jTextField1.requestFocus();
                    jTextField1.setText("");
                    getTotal();
                    return;
                }
            }
            DefaultTableModel model = (DefaultTableModel)jTable3.getModel();
            model.setRowCount(jTable3.getRowCount());
            Object[] row = {jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 0), jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 1), jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 2),
            Integer.valueOf(jTextField1.getText()), Float.parseFloat(jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 3).toString()) * Float.parseFloat(jTextField1.getText())};
            model.addRow(row);
            jTable3.setRowSelectionInterval(0, jTable3.getRowCount() - 1);
            jTextField1.requestFocus();
            jTextField1.setText("");
            getTotal();
        }
    }//GEN-LAST:event_jButton8MousePressed

    private void jButton9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MousePressed
        // Remove
        if (jTable3.getRowCount() == 0){
            jTextField1.requestFocus();
            return;
        }
        if (!jTextField1.getText().equals("") && Integer.parseInt(jTextField1.getText()) < Integer.parseInt(jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 3).toString())){
            float price = Float.parseFloat(jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 4).toString()) / Float.parseFloat(jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 3).toString());
            jTable3.getModel().setValueAt(Integer.parseInt(jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 3).toString()) - Integer.parseInt(jTextField1.getText()), jTable3.getSelectedRow(), 3);
            jTable3.getModel().setValueAt(price * Integer.parseInt(jTable3.getModel().getValueAt(jTable3.getSelectedRow(), 3).toString()), jTable3.getSelectedRow(), 4);
            jTextField1.requestFocus();
            getTotal();
            return;
        }
        if (jTable3.getRowCount() == 0)
            return;
        DefaultTableModel model = (DefaultTableModel)jTable3.getModel();
        model.removeRow(jTable3.getSelectedRow());
        if (jTable3.getRowCount() != 0)
            jTable3.setRowSelectionInterval(0, jTable3.getRowCount() - 1);
        jTextField1.requestFocus();
        getTotal();
    }//GEN-LAST:event_jButton9MousePressed

    private void jButton10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MousePressed
        // Cancel the bill
        if (jTable3.getRowCount() == 0){
            jTextField1.requestFocus();
            return;
        }
        int response = JOptionPane.showConfirmDialog(this, "Are you sure?", "Clear the bill", JOptionPane.YES_NO_OPTION);
        if (response == 0){
            DefaultTableModel model = (DefaultTableModel)jTable3.getModel();
            model.setRowCount(0);
            jTextField2.setText("0.0");
            jTextField1.requestFocus();
        }
    }//GEN-LAST:event_jButton10MousePressed

    private void jButton13MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MousePressed
        // Print
        if (jTable3.getRowCount() == 0)
            return;
        DefaultTableModel table3 = (DefaultTableModel) jTable3.getModel();
        int i=1;
        jTextArea1.setText("");
        jTextArea1.setText(jTextArea1.getText() +"   *********************************************Bill**********************************************\n"
        + "   NO. \t Product \t\t Size \t QUANTITY \t TOTAL\n");
        for(int h = 0; h < jTable3.getRowCount(); h++){
            String sub;
            if (table3.getValueAt(h, 1).toString().length() >= 13) sub = " \t ";
            else sub = " \t\t ";
            jTextArea1.setText(jTextArea1.getText()
                +"  "+ i +" \t " + table3.getValueAt(h, 1).toString() + sub + table3.getValueAt(h, 2).toString()+" \t "+table3.getValueAt(h, 3).toString()+" \t "+table3.getValueAt(h, 4).toString()+"\n");
            i++;
        }
        jTextArea1.setText(jTextArea1.getText() +"   **********************************************************************************************\n"
        + "\t TOTAL PRICE \t "+ jTextField2.getText() +" L.E\n");
        try {
            jTextArea1.print();
        } catch (PrinterException ex) {
            Logger.getLogger(Selling.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton13MousePressed

    private void jTable2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseDragged
        checkSelection();
        jTextField1.requestFocus();
    }//GEN-LAST:event_jTable2MouseDragged

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        // TODO add your handling code here:
        this.setVisible(false);
        if (parent != null) parent.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_jLabel3MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {}
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private java.awt.Label jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
